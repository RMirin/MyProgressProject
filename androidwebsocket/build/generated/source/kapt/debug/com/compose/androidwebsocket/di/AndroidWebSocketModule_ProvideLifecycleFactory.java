// Generated by Dagger (https://dagger.dev).
package com.compose.androidwebsocket.di;

import android.app.Application;
import com.tinder.scarlet.Lifecycle;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AndroidWebSocketModule_ProvideLifecycleFactory implements Factory<Lifecycle> {
  private final Provider<Application> applicationProvider;

  public AndroidWebSocketModule_ProvideLifecycleFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Lifecycle get() {
    return provideLifecycle(applicationProvider.get());
  }

  public static AndroidWebSocketModule_ProvideLifecycleFactory create(
      Provider<Application> applicationProvider) {
    return new AndroidWebSocketModule_ProvideLifecycleFactory(applicationProvider);
  }

  public static Lifecycle provideLifecycle(Application application) {
    return Preconditions.checkNotNullFromProvides(AndroidWebSocketModule.INSTANCE.provideLifecycle(application));
  }
}
