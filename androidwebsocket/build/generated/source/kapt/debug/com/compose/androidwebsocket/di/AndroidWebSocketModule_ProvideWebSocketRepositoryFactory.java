// Generated by Dagger (https://dagger.dev).
package com.compose.androidwebsocket.di;

import com.compose.androidwebsocket.data.remote.HitBtcClientImpl;
import com.compose.androidwebsocket.repository.WebSocketRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AndroidWebSocketModule_ProvideWebSocketRepositoryFactory implements Factory<WebSocketRepository> {
  private final Provider<HitBtcClientImpl> hitBtcClientImplProvider;

  public AndroidWebSocketModule_ProvideWebSocketRepositoryFactory(
      Provider<HitBtcClientImpl> hitBtcClientImplProvider) {
    this.hitBtcClientImplProvider = hitBtcClientImplProvider;
  }

  @Override
  public WebSocketRepository get() {
    return provideWebSocketRepository(hitBtcClientImplProvider.get());
  }

  public static AndroidWebSocketModule_ProvideWebSocketRepositoryFactory create(
      Provider<HitBtcClientImpl> hitBtcClientImplProvider) {
    return new AndroidWebSocketModule_ProvideWebSocketRepositoryFactory(hitBtcClientImplProvider);
  }

  public static WebSocketRepository provideWebSocketRepository(HitBtcClientImpl hitBtcClientImpl) {
    return Preconditions.checkNotNullFromProvides(AndroidWebSocketModule.INSTANCE.provideWebSocketRepository(hitBtcClientImpl));
  }
}
