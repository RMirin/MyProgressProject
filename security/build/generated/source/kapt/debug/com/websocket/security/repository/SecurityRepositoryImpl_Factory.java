// Generated by Dagger (https://dagger.dev).
package com.example.security.repository;

import com.example.security.service.SessionStoreService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SecurityRepositoryImpl_Factory implements Factory<SecurityRepositoryImpl> {
  private final Provider<SessionStoreService> sessionStoreServiceProvider;

  public SecurityRepositoryImpl_Factory(Provider<SessionStoreService> sessionStoreServiceProvider) {
    this.sessionStoreServiceProvider = sessionStoreServiceProvider;
  }

  @Override
  public SecurityRepositoryImpl get() {
    return newInstance(sessionStoreServiceProvider.get());
  }

  public static SecurityRepositoryImpl_Factory create(
      Provider<SessionStoreService> sessionStoreServiceProvider) {
    return new SecurityRepositoryImpl_Factory(sessionStoreServiceProvider);
  }

  public static SecurityRepositoryImpl newInstance(SessionStoreService sessionStoreService) {
    return new SecurityRepositoryImpl(sessionStoreService);
  }
}
