// Generated by Dagger (https://dagger.dev).
package com.example.security.usecases;

import com.example.security.repository.SecurityRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SecurityUseCaseImpl_Factory implements Factory<SecurityUseCaseImpl> {
  private final Provider<SecurityRepository> securityRepositoryProvider;

  public SecurityUseCaseImpl_Factory(Provider<SecurityRepository> securityRepositoryProvider) {
    this.securityRepositoryProvider = securityRepositoryProvider;
  }

  @Override
  public SecurityUseCaseImpl get() {
    return newInstance(securityRepositoryProvider.get());
  }

  public static SecurityUseCaseImpl_Factory create(
      Provider<SecurityRepository> securityRepositoryProvider) {
    return new SecurityUseCaseImpl_Factory(securityRepositoryProvider);
  }

  public static SecurityUseCaseImpl newInstance(SecurityRepository securityRepository) {
    return new SecurityUseCaseImpl(securityRepository);
  }
}
