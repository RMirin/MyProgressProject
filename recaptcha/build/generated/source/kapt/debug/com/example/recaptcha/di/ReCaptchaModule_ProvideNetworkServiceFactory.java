// Generated by Dagger (https://dagger.dev).
package com.example.recaptcha.di;

import android.content.Context;
import com.example.recaptcha.service.NetworkService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReCaptchaModule_ProvideNetworkServiceFactory implements Factory<NetworkService> {
  private final Provider<Context> contextProvider;

  public ReCaptchaModule_ProvideNetworkServiceFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public NetworkService get() {
    return provideNetworkService(contextProvider.get());
  }

  public static ReCaptchaModule_ProvideNetworkServiceFactory create(
      Provider<Context> contextProvider) {
    return new ReCaptchaModule_ProvideNetworkServiceFactory(contextProvider);
  }

  public static NetworkService provideNetworkService(Context context) {
    return Preconditions.checkNotNullFromProvides(ReCaptchaModule.INSTANCE.provideNetworkService(context));
  }
}
