// Generated by Dagger (https://dagger.dev).
package com.example.recaptcha.di;

import com.example.recaptcha.service.ReCaptchaVerificationService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReCaptchaModule_ProvideRetrofitFactory implements Factory<ReCaptchaVerificationService> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public ReCaptchaModule_ProvideRetrofitFactory(Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public ReCaptchaVerificationService get() {
    return provideRetrofit(okHttpClientProvider.get());
  }

  public static ReCaptchaModule_ProvideRetrofitFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new ReCaptchaModule_ProvideRetrofitFactory(okHttpClientProvider);
  }

  public static ReCaptchaVerificationService provideRetrofit(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(ReCaptchaModule.INSTANCE.provideRetrofit(okHttpClient));
  }
}
