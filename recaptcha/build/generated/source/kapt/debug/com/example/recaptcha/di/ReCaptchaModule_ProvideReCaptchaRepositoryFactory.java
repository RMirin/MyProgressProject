// Generated by Dagger (https://dagger.dev).
package com.example.recaptcha.di;

import com.example.recaptcha.repository.ReCaptchaRepository;
import com.example.recaptcha.service.ReCaptchaVerificationService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReCaptchaModule_ProvideReCaptchaRepositoryFactory implements Factory<ReCaptchaRepository> {
  private final Provider<ReCaptchaVerificationService> recaptchaVerificationServiceProvider;

  public ReCaptchaModule_ProvideReCaptchaRepositoryFactory(
      Provider<ReCaptchaVerificationService> recaptchaVerificationServiceProvider) {
    this.recaptchaVerificationServiceProvider = recaptchaVerificationServiceProvider;
  }

  @Override
  public ReCaptchaRepository get() {
    return provideReCaptchaRepository(recaptchaVerificationServiceProvider.get());
  }

  public static ReCaptchaModule_ProvideReCaptchaRepositoryFactory create(
      Provider<ReCaptchaVerificationService> recaptchaVerificationServiceProvider) {
    return new ReCaptchaModule_ProvideReCaptchaRepositoryFactory(recaptchaVerificationServiceProvider);
  }

  public static ReCaptchaRepository provideReCaptchaRepository(
      ReCaptchaVerificationService recaptchaVerificationService) {
    return Preconditions.checkNotNullFromProvides(ReCaptchaModule.INSTANCE.provideReCaptchaRepository(recaptchaVerificationService));
  }
}
