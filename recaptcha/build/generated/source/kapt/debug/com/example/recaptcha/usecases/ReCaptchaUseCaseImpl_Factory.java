// Generated by Dagger (https://dagger.dev).
package com.example.recaptcha.usecases;

import com.example.recaptcha.repository.ReCaptchaRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReCaptchaUseCaseImpl_Factory implements Factory<ReCaptchaUseCaseImpl> {
  private final Provider<ReCaptchaRepository> reCaptchaRepositoryProvider;

  public ReCaptchaUseCaseImpl_Factory(Provider<ReCaptchaRepository> reCaptchaRepositoryProvider) {
    this.reCaptchaRepositoryProvider = reCaptchaRepositoryProvider;
  }

  @Override
  public ReCaptchaUseCaseImpl get() {
    return newInstance(reCaptchaRepositoryProvider.get());
  }

  public static ReCaptchaUseCaseImpl_Factory create(
      Provider<ReCaptchaRepository> reCaptchaRepositoryProvider) {
    return new ReCaptchaUseCaseImpl_Factory(reCaptchaRepositoryProvider);
  }

  public static ReCaptchaUseCaseImpl newInstance(ReCaptchaRepository reCaptchaRepository) {
    return new ReCaptchaUseCaseImpl(reCaptchaRepository);
  }
}
