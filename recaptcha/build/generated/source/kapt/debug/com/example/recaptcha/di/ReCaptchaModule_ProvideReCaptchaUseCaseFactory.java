// Generated by Dagger (https://dagger.dev).
package com.example.recaptcha.di;

import com.example.recaptcha.repository.ReCaptchaRepository;
import com.example.recaptcha.usecases.ReCaptchaUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReCaptchaModule_ProvideReCaptchaUseCaseFactory implements Factory<ReCaptchaUseCase> {
  private final Provider<ReCaptchaRepository> reCaptchaRepositoryProvider;

  public ReCaptchaModule_ProvideReCaptchaUseCaseFactory(
      Provider<ReCaptchaRepository> reCaptchaRepositoryProvider) {
    this.reCaptchaRepositoryProvider = reCaptchaRepositoryProvider;
  }

  @Override
  public ReCaptchaUseCase get() {
    return provideReCaptchaUseCase(reCaptchaRepositoryProvider.get());
  }

  public static ReCaptchaModule_ProvideReCaptchaUseCaseFactory create(
      Provider<ReCaptchaRepository> reCaptchaRepositoryProvider) {
    return new ReCaptchaModule_ProvideReCaptchaUseCaseFactory(reCaptchaRepositoryProvider);
  }

  public static ReCaptchaUseCase provideReCaptchaUseCase(ReCaptchaRepository reCaptchaRepository) {
    return Preconditions.checkNotNullFromProvides(ReCaptchaModule.INSTANCE.provideReCaptchaUseCase(reCaptchaRepository));
  }
}
